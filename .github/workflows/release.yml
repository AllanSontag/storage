name: Release

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
  POSTGRES_URL_NON_POOLING: ${{ secrets.POSTGRES_URL_NON_POOLING }}
  EDGE_CONFIG: ${{ secrets.EDGE_CONFIG }}

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      is-blob-local-release: ${{ steps.check-blob-local-release.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
          version: pnpm version-packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN_ELEVATED }}

      - name: Check for @vercel/blob-local
        if: steps.changesets.outputs.published == 'true'
        id: check-blob-local-release
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const publishedPackages = ${{ steps.changesets.outputs.publishedPackages }}; 
            const hasBlobLocal = publishedPackages.some(item => item.name === "@vercel/blob-local");
            return hasBlobLocal ? 'true' : 'false'

  release-blob-local:
    name: Release @vercel/blob-local
    needs: release
    if: needs.release.outputs.is-blob-local-release == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Buildx
        uses: docker/setup-buildx-action@v2
        with:
          # This configures an alias for `docker build` to run `docker buildx`
          # so we don't have to update our build script to be platform-aware.
          install: true
          platforms: linux/amd64,linux/arm64

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          username: ${{ secrets.DOCKER_USERNAME }}

      - name: Read package.json
        working-directory: ./services/blob-local
        id: package-version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Docker build and push
        uses: docker/build-push-action@v4
        with:
          context: ./services/blob-local
          platforms: linux/amd64,linux/arm64
          push: true
          tags: zeit/vercel-blob-local:${{ steps.package-version.outputs.version }}
